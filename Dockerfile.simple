FROM node:18-alpine

WORKDIR /app

# Install OpenSSL and required dependencies for Prisma
RUN apk add --no-cache openssl openssl-dev postgresql-client

# Copy package files
COPY package.json package-lock.json* ./

# Install dependencies with legacy peer deps
RUN npm ci --legacy-peer-deps

# Copy source code
COPY . .

# Disable telemetry
ENV NEXT_TELEMETRY_DISABLED 1

# Create dummy API keys for build
RUN echo "OPENAI_API_KEY=sk-dummy-key" > .env.local

# Skip data collection and validation
ENV NEXT_SKIP_DATA_COLLECTION 1
ENV NEXT_SKIP_API_VALIDATION 1
ENV NEXT_SKIP_VALIDATE_ROUTE 1
ENV NEXT_SKIP_VALIDATION 1
ENV ANALYZE false
ENV SKIP_LINTING 1
ENV NEXT_SKIP_API_PREPARATION 1

# Clean Prisma cache and regenerate with OpenSSL support
RUN rm -rf node_modules/.prisma
RUN npx prisma generate --schema=./prisma/schema.prisma

# Create a custom next.config.js for build
RUN echo "const nextConfig = { typescript: { ignoreBuildErrors: true }, eslint: { ignoreDuringBuilds: true }, output: 'standalone' }; module.exports = nextConfig;" > next.config.build.js

# Build with custom config and settings
RUN NODE_OPTIONS="--max-old-space-size=4096" NEXT_CONFIG_FILE=next.config.build.js NEXT_TELEMETRY_DISABLED=1 npm run build

# Expose port
EXPOSE 3000

# Start server
CMD ["npm", "start"] 